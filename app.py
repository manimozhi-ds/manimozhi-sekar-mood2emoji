# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/130RcG-FAxRTWPEXYLnWNqztTIrl9d7b9
"""

import streamlit as st
from textblob import TextBlob
import re

BAD_WORDS = {
    "badword", "stupid", "idiot", "damn", "shit", "fuck", "hell", "dumb","asshole"
}

def contains_profanity(text: str) -> bool:
    """
    Check whether the input text contains any bad word.
    Case-insensitive, uses simple word boundaries.
    """
    text_lower = text.lower()
    for bad in BAD_WORDS:
        if re.search(rf"\b{re.escape(bad)}\b", text_lower):
            return True
    return False

def analyze_sentiment(text: str):
    """
    Analyzes text using TextBlob polarity and returns:
    - mood: 'happy', 'neutral', or 'sad'
    - explanation: short, kid-friendly explanation
    """
    if contains_profanity(text):
        return "neutral", "Contains inappropriate words — showing neutral response."

    try:
        blob = TextBlob(text)
        polarity = blob.sentiment.polarity  # -1 (negative) → +1 (positive)
    except Exception:
        polarity = 0.0

    if polarity > 0.25:
        return "happy", "Sounds happy!"
    elif polarity < -0.25:
        return "sad", "Sounds sad — maybe needs some comfort."
    else:
        return "neutral", "Seems neutral or unclear."

EMOJI = {
    "happy": "😀",
    "neutral": "😐",
    "sad": "😞"
}

st.set_page_config(page_title="Kid-safe Text-Mood Detector", page_icon="😀", layout="centered")

st.title("Kid-safe Text-Mood Detector")
st.markdown("Enter a short sentence. The app will respond with a kid-friendly emoji and a one-line explanation.")

with st.form("mood_form"):
    user_input = st.text_input("✏️ Type your sentence:", max_chars=280)
    analyze_button = st.form_submit_button("Analyze Mood")

if analyze_button:
    if not user_input.strip():
        st.warning("Please enter a sentence to analyze.")
    else:
        mood, explanation = analyze_sentiment(user_input)
        emoji = EMOJI.get(mood, "😐")

        st.markdown(f"## {emoji}  {explanation}")
        st.caption(f"Detected mood: **{mood.capitalize()}**")

st.markdown("---")
with st.expander("👩‍🏫 Teacher Mode — How this works"):
    st.header("📊 Simple Process Diagram")
    st.graphviz_chart("""
        digraph G {
          rankdir=TB;
          node [shape=box, style=rounded];
          Input -> SafetyCheck -> SentimentAnalysis -> Mapping -> Output;
          SafetyCheck [label="Filter bad/inappropriate words"];
          SentimentAnalysis [label="TextBlob polarity (-1 to 1)"];
          Mapping [label="Map to happy / neutral / sad"];
          Output [label="Show emoji + one-line message"];
        }
    """)
    st.markdown("""
    **Classroom Notes**
    - Uses *TextBlob* for basic polarity detection.
    - Applies a safety filter to keep text age-appropriate.
    - The mood is estimated by polarity thresholds:
        - Polarity > 0.25 → 😀 Happy
        - -0.25 ≤ Polarity ≤ 0.25 → 😐 Neutral
        - Polarity < -0.25 → 😞 Sad
    """)

st.markdown("---")
st.caption("Educational use only — not meant for clinical or emotional assessment.")
st.caption("Built with using Streamlit and TextBlob.")